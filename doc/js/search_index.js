var search_data = {"index":{"searchIndex":["computerplayer","decodingboard","humanplayer","check_if_contains_colour()","check_if_exact_position()","display_board()","generate_code()","get_guess()","guess_valid?()","insert_player_guess()","new()","new()","winning_conditions?()","readme"],"longSearchIndex":["computerplayer","decodingboard","humanplayer","decodingboard#check_if_contains_colour()","decodingboard#check_if_exact_position()","decodingboard#display_board()","computerplayer#generate_code()","humanplayer#get_guess()","humanplayer#guess_valid?()","decodingboard#insert_player_guess()","decodingboard::new()","humanplayer::new()","decodingboard#winning_conditions?()",""],"info":[["ComputerPlayer","","ComputerPlayer.html","","<p>This class stores the computer players secret code.\n"],["DecodingBoard","","DecodingBoard.html","","<p>This class stores information about the decoding board\n"],["HumanPlayer","","HumanPlayer.html","","<p>This class stores information about the human player\n"],["check_if_contains_colour","DecodingBoard","DecodingBoard.html#method-i-check_if_contains_colour","(secret_code, player_guess, player_turn)","<p>Check if value from guess is inside secret_code.\n"],["check_if_exact_position","DecodingBoard","DecodingBoard.html#method-i-check_if_exact_position","(secret_code, player_guess, player_turn)","<p>Compare each value in secret_code with each value in guess. Look for exact\nmatch.\n"],["display_board","DecodingBoard","DecodingBoard.html#method-i-display_board","()","<p>Display the board. 4 columns are to display the players guess and 4 columns\nprovide feedback &#39;%&#39; …\n"],["generate_code","ComputerPlayer","ComputerPlayer.html#method-i-generate_code","()","<p>Generate the computers players secret code. (Array of random numbers\nconverted to strings)\n"],["get_guess","HumanPlayer","HumanPlayer.html#method-i-get_guess","()","<p>Retrieve the human players guess. The player will continue to be prompted\nfor a guess until it is in …\n"],["guess_valid?","HumanPlayer","HumanPlayer.html#method-i-guess_valid-3F","(input)","<p>Check whether the players input is valid.\n"],["insert_player_guess","DecodingBoard","DecodingBoard.html#method-i-insert_player_guess","(turn, guess)","<p>insert the players guess onto the board.\n"],["new","DecodingBoard","DecodingBoard.html#method-c-new","()","<p>Create the board, an array of 12 rows and 8 columns.\n"],["new","HumanPlayer","HumanPlayer.html#method-c-new","()","<p>Create the human player object and set their turn to 0\n"],["winning_conditions?","DecodingBoard","DecodingBoard.html#method-i-winning_conditions-3F","(player_turn)","<p>Check if winning conditions have been met.\n"],["README","","README_md.html","","<p>This is an example of a command line mastermind game\n(en.wikipedia.org/wiki/Mastermind_(board_game)). …\n"]]}}